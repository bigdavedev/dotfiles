filetype plugin indent on
syntax on

" Install plugins
call plug#begin()
Plug 'tpope/vim-fugitive'
Plug 'ycm-core/YouCompleteMe', { 
	\ 'do': './install.py --clangd-completer',
	\ 'for': ['c', 'cpp', 'py']
\}
Plug 'tpope/vim-commentary'
Plug 'vimwiki/vimwiki'
Plug 'preservim/nerdtree'
Plug 'vim-airline/vim-airline'
Plug 'morhetz/gruvbox'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/goyo.vim'
call plug#end()

" Global configuration
let mapleader = " "

set tabstop=4
set softtabstop=4
set shiftwidth=4
set noexpandtab

set colorcolumn=80

set relativenumber
set nowrap
set smartindent

set listchars=tab:»·,nbsp:·,trail:·,extends:→,precedes:←,eol:¬
set list

set cursorline

nnoremap <leader>pu :PlugUpdate<CR>

" Set colourscheme
set background=dark
let g:gruvbox_contrast_dark="medium"
colorscheme gruvbox

let g:airline_powerline_fonts = 1

" NERDTree configuration
nnoremap <leader>nf :NERDTreeFocus<cr>

" Create a wiki
let main_wiki = {}
let main_wiki.path = '~/vimwiki'
let main_wiki.syntax = 'markdown'
let main_wiki.ext = '.md'
let main_wiki.nestex_syntaxes = {
\	'c++': 'cpp',
\	'python': 'python',
\	'sh': 'sh',
\	'diff': 'diff'
\}

let g:vimwiki_list = [main_wiki]

nnoremap <leader>ff :FZF<cr>

function! s:goyo_enter()
	if executable('tmux') && strlen($TMUX)
		silent !tmux set status off
		silent !tmux list-panes -F '\#F' | grep -q Z || tmux resize-pane -Z
	endif
	set noshowmode
	set noshowcmd
	set scrolloff=999
endfunction

function! s:goyo_leave()
	if executable('tmux') && strlen($TMUX)
		silent !tmux set status on
		silent !tmux list-panes -F '\#F' | grep -q Z && tmux resize-pane -Z
	endif
	set showmode
	set showcmd
	set scrolloff=5
endfunction

autocmd! User GoyoEnter nested call <SID>goyo_enter()
autocmd! User GoyoLeave nested call <SID>goyo_leave()

nnoremap <leader>G :Goyo<cr>
