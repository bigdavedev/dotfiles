#!/bin/bash

##===========================================================================##
## This script allows me to effectively bring my machine up by passing the   ##
## --bringup argument, and, later, keep it up-to-date by passing the --update##
## argument.                                                                 ##
##===========================================================================##

declare -r STAGING_DIR=~/.staging
declare -r INSTALL_DIR=~/bin
declare -r INSTALL_DIR_PREFIX=~

declare -r ROOT_DIR=$(dirname $0)

function print_step {
        cat << EOF
##===========================================================================##
## $1 $2
##===========================================================================##
EOF
}

##===========================================================================##
## Function    : do_tig                                                      ##
## Param       : MODE One of install or update                               ##
## Description : Install or update tig                                       ##
##===========================================================================##
function do_tig {
    declare -r MODE=$1
    if [ ${MODE} == "install" ]; then
        print_step Installing tig
        local TIG_DEPS=( libncursesw5-dev libreadline6-dev autoconf )
        pushd ${STAGING_DIR}
            git clone https://github.com/jonas/tig
        popd
        sudo apt-get install ${TIG_DEPS[@]}
    elif [ ${MODE} == "update" ]; then
        print_step Updating tig
        pushd ${STAGING_DIR}/tig
            git pull origin master
        popd
    fi

    pushd ${STAGING_DIR}/tig
        make configure
        ./configure --prefix=/usr/local
        make
        sudo make install
    popd
}

##===========================================================================##
## Function    : add_custom_ppas                                             ##
## Description : Custom PPAs have to be used to install all the packages that##
##               I normally use                                              ##
##===========================================================================##
function add_custom_ppas {
    print_step "Adding PPAs"
    sudo add-apt-repository ppa:numix/ppa
    sudo add-apt-repository ppa:webupd8team/sublime-text-3
}

function setup_powerline {
    sudo apt-get install python-pip git
    pip install --user git+git://github.com/Lokaltog/powerline
    mkdir ${HOME}/.fonts
    pushd ${HOME}/.fonts
        wget https://github.com/Lokaltog/powerline/raw/develop/font/PowerlineSymbols.otf
        cp ${ROOT_DIR}/fonts/ter-powerline-v12n.psf.gz .
    popd
    fc-cache -vf ~/.fonts
    mkdir -p ~/.config/fontconfig/conf.d/
    pushd ~/.config/fontconfig/conf.d
        wget https://github.com/Lokaltog/powerline/raw/develop/font/10-powerline-symbols.conf
    popd
}

declare -a THINGS_TO_INSTALL=( git \
                               subversion \
                               mercurial \
                               google-chrome-stable \
                               cmake \
                               cmake-gui \
                               software-properties-common \
                               clang \
                               clang++ \
                               clang-format \
                               sublime-text \
                               libboost1.55-all-dev \
                               vlc \
                               numix-gtk-theme \
                               numix-icon-theme-circle \
                               spotify-client \
                               vim \
                               tmux \
                               flac \
                               cdparanoia)

function bringup {
    add_custom_ppas
    sudo apt-get update
    print_step "Upgrading system"
    sudo apt-get upgrade -y
    sudo apt-get dist-upgrade -y
    print_step "Installing necessities"
    sudo apt-get install ${THINGS_TO_INSTALL[@]} -y

    do_tig install

    print_step "Activiating Numix themes"
    gsettings set org.gnome.desktop.interface gtk-theme "Numix"
    gsettings set org.gnome.desktop.wm.preferences theme "Numix"
}

function update {
    sudo apt-get update
    print_step "Upgrading system"
    sudo apt-get upgrade -y
    sudo apt-get dist-upgrade -y
    sudo apt-get autoremove --purge

    do_tig update
}

if [ ! -d ${STAGING_DIR} ]; then
    echo "Staging directory does not exist.  Creating it now."
    mkdir -pv ${STAGING_DIR}
fi

if [ $? -eq 0 ]; then
    echo "No arguments, assuming update..."
    update
fi

while getopts ":h-:" opt; do
    case $opt in
        -)
            case ${OPTARG} in
                bringup)
                    print_step "Performing bringup"
                    bringup
                    ;;
                update)
                    print_step "Performing update"
                    update
                    ;;
            esac ;;
        h)
            echo "Help"
            ;;
        *)
            if [ "$OPTERR" != 1 ] || [ "${optspec:0:1}" = ":" ]; then
                echo "Non-option argument: '-${OPTARG}'" >&2
            fi
            ;;
    esac
done
